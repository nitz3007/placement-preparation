//Niharika Thakur
//28-06-2019 2:32
//RAbin kalp pattern seaching algorithm


#include <bits/stdc++.h>
using namespace std;
#define d 256

void rabin(string pat,string txt, int q)
{
    int N= txt.length();
    int M= pat.length();
    int i,j;
    int p=0;    //hash value of pattern
    int t=0;    //hash value of text
    int h=1;
    for(i=0; i<M-1; i++)
    {
        h= (h*d)%q;
    }
    for(i=0; i<M; i++ )
    {
        p= (d*p + pat[i])%q;
        t= (d*t + txt[i])%q;
    }
    for(i=0; i<=N-M; i++)
    {
        if(p==t)
        {
            for(j=0; j<M; j++)
            {
                if(txt[i+j] != pat[j])
                    break;
            }
            if(j==M)
                std::cout<<"Pattern found at index "<<i<<endl;
        }
        if(i<N-M)
        {
            t= (d*(t-(txt[i]*h))+(txt[i+M]))%q;
            if(t<0)
                t=t+q;

        }
        
    }

}

int main()
{
    std::string pat,txt;
    std::cin>>pat>>txt;
    int q=101;
    rabin(pat, txt, q);
    return 0;
}
