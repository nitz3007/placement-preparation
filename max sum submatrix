//maximum sum submatrix in a given matrix


#include <bits/stdc++.h>
using namespace std;

int kadane(int arr[], int* start, int* finish, int n )
{
    int sum=0, maxsum=INT_MIN;
    *finish= -1;
    int local_start=0;
    for(int i=0; i<n; i++)
    {
        sum += arr[i];
        if(sum<0)
        {
            sum=0;
            local_start= i+1;
        }
        else if(sum> maxsum)
        {
            maxsum=sum;
            *start= local_start;
            *finish= i;
        }
    }
    if(*finish != -1)
        return maxsum;
    maxsum=arr[0];
    start=finish=0;
    for(int i=0; i<n; i++)
    {
        if(arr[i]>maxsum)
            maxsum=arr[i];
        *start= *finish= i;
    }
    return maxsum;
}



int main() {
	int n,m;
	cin>>n>>m;
	int a[n][m];
	for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++)
        {
            cin>>a[i][j];
        }
    }
    int maxSum= 0, finalleft,finalright,finaltop,finalbottom;
    int left,right,i;
    int start,finish, sum;
    for(left=0; left<m; ++left)
    {
        int temp[n]= {0};
        for(right=left; right<m; ++right)
        {
            for(i=0; i<n; ++i)
            {
                temp[i] += a[i][right];
            }
            sum = kadane(temp, &start, &finish, n);
            if(sum>maxSum)
            {
                maxSum= sum;
                finalleft=left;
                finalright=right;
                finaltop= start;
                finalbottom= finish;
                
            }
        }
    }
    cout<<"Maximum sum is: "<<maxSum<<endl;  
    for(int i=finaltop; i<=finalbottom; i++)
    {
        for(int j= finalleft; j<=finalright; j++)
        {
            cout<<a[i][j]<<" ";
            
        }
        cout<<"\n";
    }
	return 0;
}
